// EventTypes.js - findviz event types

export const EVENT_TYPES = {
    ANALYSIS: {
        WINDOWED_AVERAGE: 'windowedAverageSuccessful',
        CORRELATION: 'correlationSuccessful',
        DISTANCE: 'distanceSuccessful',
        DISTANCE_REMOVE: 'distanceRemoveSuccessful',
    },
    VISUALIZATION: {
        ANNOTATE: {
            ANNOTATE_MARKER_ADDED: 'annotateMarkerAdded',
            ANNOTATE_HIGHLIGHT_TOGGLE: 'annotateHighlightToggle',
            ANNOTATE_MARKER_MOVED: 'annotateMarkerMoved',
            ANNOTATE_MARKER_UNDONE: 'annotateMarkerUndone',
            ANNOTATE_MARKER_REMOVED: 'annotateMarkerRemoved',
        },
        DISTANCE: {
            COLOR_MAP_CHANGE: 'distanceColorMapChange',
            TIME_MARKER_COLOR_MAP_CHANGE: 'distanceTimeMarkerColorMapChange',
            TIME_MARKER_WIDTH_CHANGE: 'distanceTimeMarkerWidthChange',
            TIME_MARKER_OPACITY_CHANGE: 'distanceTimeMarkerOpacityChange',
        },
        FMRI: {
            COLOR_SLIDER_CHANGE: 'colorSliderChange',
            COLOR_MAP_CHANGE: 'colorMapChange',
            GIFTIVIEWER_CLICK: 'giftiViewerClick',
            HOVER_TEXT_TOGGLE: 'toggleHoverChange',
            INIT_NIFTI_VIEWER: 'initNiftiViewer',
            INIT_GIFTIVIEWER: 'initGiftiViewer',
            MONTAGE_POPOVER_SHOW: 'montagePopoverShow',
            MONTAGE_SLICE_DIRECTION_CHANGE: 'montageSliceDirectionChange',
            MONTAGE_SLICE_CHANGE: 'montageSliceChange',
            NIFTIVIEWER_CLICK: 'niftiViewerClick',
            OPACITY_SLIDER_CHANGE: 'opacitySliderChange',
            PLAY_MOVIE_SPEED_CHANGE: 'playMovieSpeedChange',
            RESET_COLOR_SLIDERS: 'resetColorSliders',
            THRESHOLD_SLIDER_CHANGE: 'thresholdSliderChange',
            TIME_SLIDER_CHANGE: 'timeSliderChange',
            TOGGLE_COLORBAR: 'toggleColorbarChange',
            TOGGLE_CROSSHAIR: 'toggleCrosshairChange',
            TOGGLE_DIRECTION_MARKER: 'toggleDirectionMarkerChange',
            TOGGLE_REVERSE_COLORBAR: 'toggleReverseColorbarChange',
            VIEW_TOGGLE: 'toggleViewChange',
        },
        TIMECOURSE: {
            ADD_FMRI_TIMECOURSE: 'addFmriTimecourse',
            ENABLE_FMRI_TIMECOURSE: 'enableFmriTimecourse',
            FREEZE_FMRI_TIMECOURSE: 'freezeFmriTimecourse',
            GRID_TOGGLE: 'gridToggleChange',
            HOVER_TEXT_TOGGLE: 'hoverTextToggleChange',
            REMOVE_FMRI_TIMECOURSE: 'removeFmriTimecourse',
            TIMECOURSE_COLOR_CHANGE: 'timecourseColorChange',
            TIMECOURSE_MODE_CHANGE: 'timecourseModeChange',
            TIMECOURSE_OPACITY_SLIDER_CHANGE: 'timecourseOpacitySliderChange',
            TIMECOURSE_LINE_WIDTH_SLIDER_CHANGE: 'timecourseLineWidthSliderChange',
            TIMECOURSE_SCALE_CHANGE: 'timecourseScaleChange',
            TIME_MARKER_COLOR_CHANGE: 'timeMarkerColorChange',
            TIME_MARKER_WIDTH_SLIDER_CHANGE: 'timeMarkerWidthSliderChange',
            TIME_MARKER_OPACITY_SLIDER_CHANGE: 'timeMarkerOpacitySliderChange',
            TIME_MARKER_SHAPE_CHANGE: 'timeMarkerShapeChange',
            TIME_MARKER_VISIBILITY_TOGGLE: 'timeMarkerVisibilityToggleChange',
            TOGGLE_CONVOLUTION: 'toggleConvolutionChange',
            TOGGLE_CONVOLUTION_GLOBAL: 'toggleConvolutionGlobalChange',
            UNDO_FMRI_TIMECOURSE: 'undoFmriTimecourse',
        },
    },
    PREPROCESSING: {
        PREPROCESS_FMRI_RESET: 'preprocessFmriReset',
        PREPROCESS_FMRI_SUCCESS: 'preprocessFmriSuccess',
        PREPROCESS_TIMECOURSE_RESET: 'preprocessTimecourseReset',
        PREPROCESS_TIMECOURSE_SUCCESS: 'preprocessTimecourseSuccess',
    }
};
